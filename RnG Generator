using Godot;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Reflection.Metadata;
using System.Reflection.Metadata.Ecma335;





public partial class UI : Control
{	
	
//Array kk = Array.CreateInstance( typeof(int), i);
[Export]
int Column = 5;
[Export]
int Row = 5 ;
[Export]

int MaxColumnValues = 16;
				
List<int> ColumnNumbers = new List<int>();
List<int> ChosenNumbers = new List<int>();

int ColumnOffset = 0;
int RowOffset = 0;

int RnG;

static Random random = new Random();
		
	
	public override void _Ready()
	{
		ColumnSetup();
	}

	
	
	
	 void ColumnSetup()
	{
		for (int i = 1 + ColumnOffset; i < MaxColumnValues; i++)
		{
			ColumnNumbers.Add(i);
		}


		for (int i = 1; i <= Column; i++)
		{
			int r = random.Next(ColumnNumbers.Count);
			RnG = r;
			ChosenNumbers.Add(r);
			GD.Print(r);

			ColumnRemoval();
		}
				
	}

	void ColumnRemoval()
	{
		for (int i = 1; i <= Column;)
		{
			ColumnNumbers.Remove(RnG);
			GD.Print(RnG);
		}
	}	
		


	
	
	
	
	
	// Called every frame. 'delta' is the elapsed time since the previous frame.
	public override void _Process(double delta)
	{
	}
}
